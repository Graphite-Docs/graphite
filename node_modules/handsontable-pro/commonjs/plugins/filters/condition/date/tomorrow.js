'use strict';

exports.__esModule = true;
exports.CONDITION_NAME = undefined;
exports.condition = condition;

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _constants = require('handsontable/i18n/constants');

var C = _interopRequireWildcard(_constants);

var _conditionRegisterer = require('./../../conditionRegisterer');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CONDITION_NAME = exports.CONDITION_NAME = 'date_tomorrow';

function condition(dataRow) {
  var date = (0, _moment2.default)(dataRow.value, dataRow.meta.dateFormat);

  if (!date.isValid()) {
    return false;
  }

  return date.isSame((0, _moment2.default)().subtract(-1, 'days').startOf('day'), 'd');
}

(0, _conditionRegisterer.registerCondition)(CONDITION_NAME, condition, {
  name: C.FILTERS_CONDITIONS_TOMORROW,
  inputsCount: 0
});